#!/bin/sh
#
# nfslock       This shell script takes care of starting and stopping
#               the NFS file locking service.
#
# chkconfig: 345 14 86
# description: NFS is a popular protocol for file sharing across \
#	       TCP/IP networks. This service provides NFS file \
#	       locking functionality.
# probe: true

# Source function library.
. /etc/rc.d/init.d/functions

# Source networking configuration.
if [ ! -f /etc/sysconfig/network ]; then
    exit 0
fi

. /etc/sysconfig/network

# Check that networking is up.
[ ${NETWORKING} = "no" ] && exit 0

KERNVER=`uname -r | awk -F . '{ print $1.$2 }'`
KERNREL=`uname -r | awk -F '[.-]' '{ print $3 }'`

RETVAL=0

if [ "$KERNVER" -lt 24 ]; then
  [ -x /sbin/rpc.lockd ] || exit 0
fi
[ -x /sbin/rpc.statd ] || exit 0

start() {
	# Start daemons.
	echo $"Starting NFS file locking services: "
	if [ "$KERNVER" -lt 24 -a "$KERNREL" -lt 18 ]; then
	  echo -n $"Starting NFS lockd: "
	  daemon rpc.lockd
	  echo
	fi  
	echo -n $"Starting NFS statd: "
	daemon rpc.statd
	RETVAL=$?
	echo
	[ $RETVAL -eq 0 ] && touch /var/lock/subsys/nfslock
	return $RETVAL
}

stop() {
	# Stop daemons.
	echo $"Shutting down NFS file locking services: "
	if [ "$KERNVER" -lt 24 -a "$KERNREL" -lt 18 ]; then
	   echo -n $"Shutting down NFS lockd: "
	   killproc lockd
	   echo
	fi
	echo -n $"Shutting down NFS statd: "
	killproc rpc.statd
	RETVAL=0
	echo
	[ $RETVAL -eq 0 ] && rm -f /var/lock/subsys/nfslock
	return $RETVAL
}

# See how we were called.
case "$1" in
  start)
        start
	;;
  stop)
  	stop
	;;
  status)
	if [ "$KERNVER" -lt 24 -a "$KERNREL" -lt 18 ]; then
	  status lockd
	fi 
	status rpc.statd
	;;
  restart)
        stop
	start
	;;
  probe)
	if [ ! -f /var/lock/subsys/nfslock ] ; then
	  echo start; exit 0
	fi
	/sbin/pidof rpc.statd >/dev/null 2>&1; STATD="$?"
	if [ "$KERNVER" -lt 24 -a "$KERNREL" -lt 18 ]; then
	   /sbin/pidof lockd >/dev/null 2>&1; LOCKD="$?"
	else
	   LOCKD=0
	fi
	if [ $STATD = 1 -o $LOCKD = 1 ] ; then
	  echo restart; exit 0
	fi
	;;
  *)
	echo $"Usage: $0 {start|stop|status|restart}"
	exit 1
esac

exit 0
